import java.io.*;
import java.awt.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Nick
 */
public class DropLogger extends javax.swing.JFrame {

    //variables
    String rex_file_name = "";
    String zulrah_file_name = "";
    
    public DropLogger() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        db = new javax.swing.JFileChooser();
        TabbedPane = new javax.swing.JTabbedPane();
        Rex = new javax.swing.JPanel();
        RexOpenLog = new javax.swing.JButton();
        RexDragonAxe = new javax.swing.JButton();
        RexBerserkerRing = new javax.swing.JButton();
        RexFilePath = new javax.swing.JButton();
        Zulrah = new javax.swing.JPanel();
        ZulrahOpenLog = new javax.swing.JButton();
        ZulrahFilePath = new javax.swing.JButton();
        ZulrahFlax = new javax.swing.JRadioButton();
        ZulrahLaws = new javax.swing.JRadioButton();
        ZulrahLogKill = new javax.swing.JButton();
        confirmDisplay = new javax.swing.JLabel();
        Header = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Drop Logger");

        RexOpenLog.setText("Open Drop Log");
        RexOpenLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RexOpenLogActionPerformed(evt);
            }
        });

        RexDragonAxe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ItemPictures/Dragon_axe.png"))); // NOI18N
        RexDragonAxe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RexDragonAxeActionPerformed(evt);
            }
        });

        RexBerserkerRing.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ItemPictures/Berserker_ring.png.png"))); // NOI18N
        RexBerserkerRing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RexBerserkerRingActionPerformed(evt);
            }
        });

        RexFilePath.setText("Define File Path");
        RexFilePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RexFilePathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RexLayout = new javax.swing.GroupLayout(Rex);
        Rex.setLayout(RexLayout);
        RexLayout.setHorizontalGroup(
            RexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RexLayout.createSequentialGroup()
                .addGroup(RexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RexLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(RexFilePath)
                        .addGap(42, 42, 42)
                        .addComponent(RexOpenLog))
                    .addGroup(RexLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(RexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RexBerserkerRing)
                            .addComponent(RexDragonAxe))))
                .addGap(0, 241, Short.MAX_VALUE))
        );
        RexLayout.setVerticalGroup(
            RexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RexLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(RexDragonAxe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RexBerserkerRing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addGroup(RexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RexOpenLog)
                    .addComponent(RexFilePath))
                .addGap(87, 87, 87))
        );

        TabbedPane.addTab("Rex", Rex);

        ZulrahOpenLog.setText("Open Drop Log");
        ZulrahOpenLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZulrahOpenLogActionPerformed(evt);
            }
        });

        ZulrahFilePath.setText("Define File Path");
        ZulrahFilePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZulrahFilePathActionPerformed(evt);
            }
        });

        ZulrahFlax.setText("Flax");

        ZulrahLaws.setText("Laws");

        ZulrahLogKill.setText("Log Kill");
        ZulrahLogKill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZulrahLogKillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ZulrahLayout = new javax.swing.GroupLayout(Zulrah);
        Zulrah.setLayout(ZulrahLayout);
        ZulrahLayout.setHorizontalGroup(
            ZulrahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ZulrahLayout.createSequentialGroup()
                .addGroup(ZulrahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ZulrahLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(ZulrahFilePath)
                        .addGap(91, 91, 91)
                        .addComponent(ZulrahOpenLog))
                    .addGroup(ZulrahLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(ZulrahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ZulrahLaws)
                            .addComponent(ZulrahFlax)))
                    .addGroup(ZulrahLayout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(ZulrahLogKill)))
                .addContainerGap(210, Short.MAX_VALUE))
        );
        ZulrahLayout.setVerticalGroup(
            ZulrahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ZulrahLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(ZulrahFlax)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ZulrahLaws)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                .addGroup(ZulrahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ZulrahOpenLog)
                    .addComponent(ZulrahFilePath))
                .addGap(18, 18, 18)
                .addComponent(ZulrahLogKill)
                .addGap(68, 68, 68))
        );

        TabbedPane.addTab("Zulrah", Zulrah);

        confirmDisplay.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        confirmDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Header.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Header.setText("DivineShine's OSRS Drop Logger");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confirmDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(TabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(Header)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(confirmDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        TabbedPane.getAccessibleContext().setAccessibleName("DKs");

        pack();
    }// </editor-fold>                        

    private void RexOpenLogActionPerformed(java.awt.event.ActionEvent evt) {                                           
        Desktop dk = Desktop.getDesktop();
        try {
            dk.open(new File(rex_file_name));        
        } catch (IOException ex) {
            Logger.getLogger(DropLogger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                          

    private void RexDragonAxeActionPerformed(java.awt.event.ActionEvent evt) {                                             
        try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(rex_file_name, true)))) {
            out.println("1 x Dragon Axe");
        } catch (IOException ex) {
            Logger.getLogger(DropLogger.class.getName()).log(Level.SEVERE, null, ex);
        }
        confirmDisplay.setText("Added drop: 1 x Dragon Axe");
    }                                            

    private void RexBerserkerRingActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(rex_file_name, true)))) {
            out.println("1 x Berserker Ring");
        } catch (IOException ex) {
            Logger.getLogger(DropLogger.class.getName()).log(Level.SEVERE, null, ex);
        }
        confirmDisplay.setText("Added drop: 1 x Berserker Ring");
    }                                                

    private void RexFilePathActionPerformed(java.awt.event.ActionEvent evt) {                                            
        FileFilter ft = new FileNameExtensionFilter("Text Files", "txt");
        db.addChoosableFileFilter(ft);
        
        int returnVal;
        returnVal = db.showOpenDialog(this);
        
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = db.getSelectedFile();
            rex_file_name = file.toString();
        }
        confirmDisplay.setText("File path selected: " + rex_file_name);
    }                                           

    private void ZulrahOpenLogActionPerformed(java.awt.event.ActionEvent evt) {                                              
        Desktop dk = Desktop.getDesktop();
        try {
            dk.open(new File(zulrah_file_name));        
        } catch (IOException ex) {
            Logger.getLogger(DropLogger.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                             

    private void ZulrahFilePathActionPerformed(java.awt.event.ActionEvent evt) {                                               
        FileFilter ft = new FileNameExtensionFilter("Text Files", "txt");
        db.addChoosableFileFilter(ft);
        
        int returnVal;
        returnVal = db.showOpenDialog(this);
        
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = db.getSelectedFile();
            zulrah_file_name = file.toString();
        }
        confirmDisplay.setText("File path selected: " + zulrah_file_name);
    }                                              

    private void ZulrahLogKillActionPerformed(java.awt.event.ActionEvent evt) {                                              
        StringBuilder zulrah_kill = new StringBuilder();
        
        if (ZulrahFlax.isSelected()) {
            zulrah_kill.append("1000 x Flax ");
        }
        if (ZulrahLaws.isSelected()) {
            zulrah_kill.append("200 x Law Runes ");
        }
        
        try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(zulrah_file_name, true)))) {
            out.println(zulrah_kill);
        } catch (IOException ex) {
            Logger.getLogger(DropLogger.class.getName()).log(Level.SEVERE, null, ex);
        }
        confirmDisplay.setText("Added drop: " + zulrah_kill);
        zulrah_kill.setLength(0);
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DropLogger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DropLogger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DropLogger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DropLogger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DropLogger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel Header;
    private javax.swing.JPanel Rex;
    private javax.swing.JButton RexBerserkerRing;
    private javax.swing.JButton RexDragonAxe;
    private javax.swing.JButton RexFilePath;
    private javax.swing.JButton RexOpenLog;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JPanel Zulrah;
    private javax.swing.JButton ZulrahFilePath;
    private javax.swing.JRadioButton ZulrahFlax;
    private javax.swing.JRadioButton ZulrahLaws;
    private javax.swing.JButton ZulrahLogKill;
    private javax.swing.JButton ZulrahOpenLog;
    private javax.swing.JLabel confirmDisplay;
    private javax.swing.JFileChooser db;
    // End of variables declaration                   
}
